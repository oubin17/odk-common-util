spring:
  odk:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    driver-class-name: oracle.jdbc.driver.OracleDriver
    # 调用方需要配置数据库类型和连接方式
    datasource:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306?characterEncoding=utf8
      username: root
      password: 123456

#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306?characterEncoding=utf8
#    username: root
#    password: 123456
  druid:
# ########## 连接池配置-开始 ##########
    initial-size: 5 #初始化大小
    min-idle: 5 #最小连接数
    max-active: 20 #最大连接数
    max-wait: 60000 #配置获取连接等待超时的时间
    pool-prepared-statements: true #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。5.5及以上版本有PSCache，建议开启。
    max-pool-prepared-statement-per-connection-size: 20 #配置PSCache的大小
    validation-query: SELECT 1 FROM DUAL #用来检测连接是否有效的sql，要求是一个查询语句，常用SELECT 1 FROM DUAL
    validation-query-timeout: 3000 #检测连接是否有效的超时时间，单位是秒。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
    test-on-borrow: false #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    test-on-return: false #是否在归还到池中前进行检验
    test-while-idle: true #是否在连接池空闲一段时间后检验连接有效性
    time-between-eviction-runs-millis: 60000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    min-evictable-idle-time-millis: 300000 #配置一个连接在池中最小生存的时间，单位是毫秒
    max-evictable-idle-time-millis: 600000 #配置连接池中连接，在时间段内一直空闲，被逐出连接池的时间，单位毫秒。在minEvictableIdleTimeMillis基础上扩展，会在minEvictableIdleTimeMillis基础上判断连接是否空闲（默认逐出时间就是minEvictableIdleTimeMillis）
#max-open-prepared-statements: #和上面的等价
#   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#filters: stat,wall,log4j
    use-global-data-source-stat: true #是否使用统计
    connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 #合并多个DruidDataSource的监控数据
# ########## 连接池配置-结束 ##########